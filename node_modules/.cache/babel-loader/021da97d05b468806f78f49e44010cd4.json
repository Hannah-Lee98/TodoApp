{"ast":null,"code":"import _defineProperty from \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lession1/TodoForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport Label from '../UIComponent/Label.js';\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      model: null\n    };\n\n    this.handleInput = event => {\n      const data = this.props.data;\n      this.setState({\n        model: _objectSpread({}, data, {\n          content: event.target.value\n        })\n      });\n    };\n\n    this.handleAdd = () => {\n      const onAdd = this.props.onAdd;\n      const model = this.state.model;\n      if (!model) return;\n      onAdd({\n        id: Math.random(),\n        content: model.content\n      });\n      this.setState({\n        model: null\n      });\n    };\n\n    this.handleEdit = async () => {\n      const model = this.state.model;\n      const onEdit = this.props.onEdit;\n      onEdit(model);\n    };\n\n    this.handleCancel = () => {\n      this.props.onEdit(null);\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    if (data !== null) {\n      this.setState({\n        model: data ? _objectSpread({}, data) : null\n      });\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    const data = this.props.data;\n\n    if (preProps.data !== data) {\n      this.setState({\n        model: data ? _objectSpread({}, data) : null\n      });\n    }\n  }\n\n  render() {\n    const model = this.state.model;\n    const data = this.props.data;\n    return React.createElement(Root, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: model ? model.content : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, !data ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lession1/TodoForm/index.js"],"names":["React","Root","Button","Input","Label","TodoForm","Component","state","model","handleInput","event","data","props","setState","content","target","value","handleAdd","onAdd","id","Math","random","handleEdit","onEdit","handleCancel","componentDidMount","componentDidUpdate","preProps","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport Label from '../UIComponent/Label.js'\n\n\nclass TodoForm extends React.Component {\n    state = {\n        model: null,\n    }\n    componentDidMount() {\n        const { data } = this.props;\n\n        if (data !== null) {\n            this.setState({\n                model: data ? { ...data } : null,\n            })\n        }\n    }\n    componentDidUpdate(preProps) {\n        const { data } = this.props;\n        if (preProps.data !== data) {\n            this.setState({\n                model: data ? { ...data } : null,\n            })\n        }\n\n    }\n    handleInput = (event) => {\n        const { data } = this.props;\n        this.setState({\n            model: { ...data, content: event.target.value }\n        })\n    }\n    handleAdd = () => {\n        const { onAdd } = this.props;\n        const { model } = this.state;\n        if (!model) return\n        onAdd({\n            id: Math.random(),\n            content: model.content,\n        })\n        this.setState({\n            model: null,\n        })\n    }\n    handleEdit = async () => {\n        const { model } = this.state;\n        const { onEdit } = this.props;\n        onEdit(model);\n\n    }\n    handleCancel = () => {\n        this.props.onEdit(null);\n    }\n    render() {\n        const { model } = this.state;\n        const { data } = this.props;\n        return (\n            <Root>\n                <div>\n                    \n                    <Input placeholder=\"Task\" type=\"text\" value={model ? model.content : ''} onChange={this.handleInput} />\n                </div>\n                <div>\n                {!data ?\n                    <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                    <div>\n                        <Button type={'update'} onClick={this.handleEdit}>Update</Button>\n                        <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                    </div>                  \n                }\n                </div>\n            </Root>\n        )\n    }\n}\n\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}