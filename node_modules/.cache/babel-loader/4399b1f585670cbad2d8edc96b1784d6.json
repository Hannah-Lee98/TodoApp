{"ast":null,"code":"import _defineProperty from \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  todoList: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: item => dispatch(toggleTodo(item))\n});\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      model: null\n    };\n\n    this.handleInput = event => {\n      const data = this.props.data;\n      this.setState({\n        model: _objectSpread({}, data, {\n          content: event.target.value\n        })\n      });\n    };\n\n    this.handleAdd = () => {\n      const model = this.state.model;\n      this.setState({\n        id: Math.random(),\n        content: model.content\n      });\n      this.props.AddTodo(model);\n      this.setState({\n        model: null\n      });\n    };\n\n    this.handleEdit = async () => {\n      const model = this.state.model;\n      const onEdit = this.props.onEdit;\n      onEdit(model);\n    };\n\n    this.handleCancel = () => {\n      this.props.onEdit(null);\n    };\n  }\n\n  componentDidMount() {\n    const data = this.props.data;\n\n    if (data !== null) {\n      this.setState({\n        model: data ? _objectSpread({}, data) : null\n      });\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    const data = this.props.data;\n\n    if (preProps.data !== data) {\n      this.setState({\n        model: data ? _objectSpread({}, data) : null\n      });\n    }\n  }\n\n  render() {\n    const model = this.state.model;\n    const data = this.props.data;\n    return React.createElement(Root, {\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: model ? model.content : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, !data ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js"],"names":["React","Root","Button","Input","connect","mapStateToProps","state","todoList","getVisibleTodos","todos","visibilityFilter","mapDispatchToProps","dispatch","toggleTodo","item","TodoForm","Component","model","handleInput","event","data","props","setState","content","target","value","handleAdd","id","Math","random","AddTodo","handleEdit","onEdit","handleCancel","componentDidMount","componentDidUpdate","preProps","render","width","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n    todoList: getVisibleTodos(state.todos, state.visibilityFilter)\n  })\n  \n  const mapDispatchToProps = dispatch => ({\n    toggleTodo: item => dispatch(toggleTodo(item))\n  })\n\nclass TodoForm extends React.Component {\n        state = {\n            model: null,\n        }\n        componentDidMount() {\n            const { data } = this.props;\n            if (data !== null) {\n                this.setState({\n                    model: data ? { ...data } : null,\n                })\n            }\n        }\n        componentDidUpdate(preProps) {\n            const { data } = this.props;\n            if (preProps.data !== data) {\n                this.setState({\n                    model: data ? { ...data } : null,\n                })\n            }\n\n        }\n        handleInput = (event) => {\n            const { data } = this.props;\n            this.setState({\n                model: { ...data, content: event.target.value }\n            })\n        }\n        handleAdd = () => {\n            const { model } = this.state;\n            this.setState({\n                id: Math.random(),\n                content: model.content,\n            })\n            this.props.AddTodo(model)\n            this.setState({\n                model: null,\n            })\n            \n        }\n        handleEdit = async () => {\n            const { model } = this.state;\n            const { onEdit } = this.props;\n            onEdit(model);\n\n        }\n        handleCancel = () => {\n            this.props.onEdit(null);\n        }\n        render() {\n            const { model } = this.state;\n            const { data } = this.props;\n            return (\n                <Root className=\"gutter-8\">\n                    <div style={{ width: \"100%\" }}>\n                        <Input placeholder=\"Task\" type=\"text\" value={model ? model.content : ''} onChange={this.handleInput} />\n                    </div>\n                    <div >\n                        {!data ?\n                            <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                            <div style={{ display: \"flex\" }} className='gutter-8'>\n                                <Button type={'update'} onClick={this.handleEdit}>Update</Button>\n                                <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                            </div>\n                        }\n                    </div>\n                </Root>\n            )\n        }\n    }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);"]},"metadata":{},"sourceType":"module"}