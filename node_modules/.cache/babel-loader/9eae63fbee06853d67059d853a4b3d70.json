{"ast":null,"code":"import _defineProperty from \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { EditTodo, AddTodo, UpdateTodo } from '../../../Actions/todo';\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleInput = event => {\n      let model = this.props.model;\n      model = _objectSpread({}, model, {\n        content: event.target.value\n      });\n    };\n\n    this.handleAdd = () => {\n      const _this$props = this.props,\n            AddTodo = _this$props.AddTodo,\n            model = _this$props.model;\n      model && AddTodo({\n        id: Math.random(),\n        content: model.content\n      });\n    };\n\n    this.handleUpdate = async () => {\n      const _this$props2 = this.props,\n            UpdateTodo = _this$props2.UpdateTodo,\n            model = _this$props2.model;\n      UpdateTodo(model);\n    };\n\n    this.handleCancel = () => {\n      this.props.EditTodo(null);\n    };\n  }\n\n  render() {\n    const model = this.props.model;\n    return React.createElement(Root, {\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: model ? model.content : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, !model ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    AddTodo,\n    EditTodo,\n    UpdateTodo\n  }, dispatch);\n};\n\nconst mapStateToProps = state => ({\n  model: state.model\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js"],"names":["React","Root","Button","Input","connect","bindActionCreators","EditTodo","AddTodo","UpdateTodo","TodoForm","Component","handleInput","event","model","props","content","target","value","handleAdd","id","Math","random","handleUpdate","handleCancel","render","width","display","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { EditTodo, AddTodo, UpdateTodo } from '../../../Actions/todo'\n\nclass TodoForm extends React.Component {\n    \n    // componentDidMount() {\n    //     const { model } = this.props;\n    //     if (model !== null) {\n    //         this.setState({\n    //             modelState: model ? { ...model } : null,\n    //         })\n    //     }\n    // }\n    // componentDidUpdate(preProps) {\n    //     const { model } = this.props;\n    //     if (preProps.model !== model) {\n    //         this.setState({\n    //             modelState: model ? { ...model } : null,\n    //         })\n    //     }\n    // }\n    handleInput = (event) => {\n        let { model } = this.props;\n        model = {...model, content: event.target.value }\n    }\n    handleAdd = () => {\n        const { AddTodo, model } = this.props\n        model && AddTodo({\n            id: Math.random(),\n            content: model.content,\n        })\n    }\n    handleUpdate = async () => {\n        const { UpdateTodo, model } = this.props;\n        UpdateTodo(model);\n    }\n    handleCancel = () => {\n        this.props.EditTodo(null);\n    }\n    render() {\n        const { model } = this.props;\n        return (\n            <Root className=\"gutter-8\">\n                <div style={{ width: \"100%\" }}>\n                    <Input placeholder=\"Task\" type=\"text\" value={model ? model.content : ''} onChange={this.handleInput} />\n                </div>\n                <div >\n                    {!model ?\n                        <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                        <div style={{ display: \"flex\" }} className='gutter-8'>\n                            <Button type={'update'} onClick={this.handleUpdate}>Update</Button>\n                            <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                        </div>\n                    }\n                </div>\n            </Root>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({ AddTodo, EditTodo, UpdateTodo }, dispatch)\n}\nconst mapStateToProps = state => ({\n    model: state.model\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);"]},"metadata":{},"sourceType":"module"}