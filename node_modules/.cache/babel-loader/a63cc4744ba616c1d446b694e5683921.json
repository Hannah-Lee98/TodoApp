{"ast":null,"code":"import _defineProperty from \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport container from './container';\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modelState: null\n    };\n\n    this.handleInput = event => {\n      const model = this.props.model;\n      this.setState({\n        modelState: _objectSpread({}, model, {\n          content: event.target.value\n        })\n      });\n      console.log(event.target.value);\n      console.log(this.state.modelState);\n    };\n\n    this.handleAdd = () => {\n      const modelState = this.state.modelState;\n      const AddTodo = this.props.AddTodo;\n      modelState && AddTodo({\n        id: Math.random(),\n        content: modelState.content\n      });\n      this.setState({\n        modelState: null\n      });\n    };\n\n    this.handleUpdate = async () => {\n      const modelState = this.state.modelState;\n      const UpdateTodo = this.props.UpdateTodo;\n      UpdateTodo(modelState);\n    };\n\n    this.handleCancel = () => {\n      this.props.EditTodo(null);\n    };\n  }\n\n  componentDidMount() {\n    const model = this.props.model;\n\n    if (model !== null) {\n      this.setState({\n        modelState: model ? _objectSpread({}, model) : null\n      });\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    const model = this.props.model;\n\n    if (preProps.model !== model) {\n      this.setState({\n        modelState: model ? _objectSpread({}, model) : null\n      });\n    }\n  }\n\n  render() {\n    const modelState = this.state.modelState;\n    const model = this.props.model;\n    return React.createElement(Root, {\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: modelState ? modelState.content : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, !model ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default container(TodoForm);","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js"],"names":["React","Root","Button","Input","container","TodoForm","Component","state","modelState","handleInput","event","model","props","setState","content","target","value","console","log","handleAdd","AddTodo","id","Math","random","handleUpdate","UpdateTodo","handleCancel","EditTodo","componentDidMount","componentDidUpdate","preProps","render","width","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport container from './container'\n\nclass TodoForm extends React.Component {\n    state = {\n        modelState: null,\n    }\n    componentDidMount() {\n        const { model } = this.props;\n        if (model !== null) {\n            this.setState({\n                modelState: model ? { ...model } : null,\n            })\n        }\n    }\n    componentDidUpdate(preProps) {\n        const { model } = this.props;\n        if (preProps.model !== model) {\n            this.setState({\n                modelState: model ? { ...model } : null,\n            })\n        }\n    }\n    handleInput = (event) => {\n        const { model } = this.props;\n        this.setState({\n            modelState: { ...model, content: event.target.value }\n        })\n        console.log(event.target.value)\n        console.log(this.state.modelState)\n    }\n    // handleInput =(event) =>{\n    //     const contentValue = {content: event.target.value}\n    //     console.log(contentValue);\n    // }\n    handleAdd = () => {\n        const { modelState } = this.state\n        const { AddTodo } = this.props\n        modelState && AddTodo({\n            id: Math.random(),\n            content: modelState.content,\n        })\n        this.setState({\n            modelState: null,\n        })\n    }\n    handleUpdate = async () => {\n        const { modelState } = this.state\n        const { UpdateTodo } = this.props;\n        UpdateTodo(modelState);\n    }\n    handleCancel = () => {\n        this.props.EditTodo(null);\n    }\n    render() {\n        const { modelState } = this.state\n        const { model } = this.props;\n        return (\n            <Root className=\"gutter-8\">\n                <div style={{ width: \"100%\" }}>\n                    <Input placeholder=\"Task\" type=\"text\" value={modelState ? modelState.content : ''} onChange={this.handleInput} />\n                </div>\n                <div >\n                    {!model ?\n                        <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                        <div style={{ display: \"flex\" }} className='gutter-8'>\n                            <Button type={'update'} onClick={this.handleUpdate}>Update</Button>\n                            <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                        </div>\n                    }\n                </div>\n            </Root>\n        )\n    }\n}\n\nexport default container(TodoForm)"]},"metadata":{},"sourceType":"module"}