{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js\";\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { EditTodo, AddTodo, UpdateTodo } from '../../../Actions/todo';\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modelState: {}\n    };\n\n    this.handleInput = event => {\n      const model = this.props.model; // this.setState({\n      //     modelState: {...model, content: event.target.value}\n      // })\n\n      console.log(event.target.value);\n    };\n\n    this.handleAdd = () => {\n      const _this$props = this.props,\n            AddTodo = _this$props.AddTodo,\n            model = _this$props.model;\n      model && AddTodo({\n        id: Math.random(),\n        content: model.content\n      });\n    };\n\n    this.handleUpdate = async () => {\n      const _this$props2 = this.props,\n            UpdateTodo = _this$props2.UpdateTodo,\n            model = _this$props2.model;\n      UpdateTodo(model);\n    };\n\n    this.handleCancel = () => {\n      this.props.EditTodo(null);\n    };\n  }\n\n  render() {\n    const modelState = this.state.modelState;\n    const model = this.props.model;\n    return React.createElement(Root, {\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: modelState ? modelState.content : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, !model ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    AddTodo,\n    EditTodo,\n    UpdateTodo\n  }, dispatch);\n};\n\nconst mapStateToProps = state => ({\n  model: state.model\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js"],"names":["React","Root","Button","Input","connect","bindActionCreators","EditTodo","AddTodo","UpdateTodo","TodoForm","Component","state","modelState","handleInput","event","model","props","console","log","target","value","handleAdd","id","Math","random","content","handleUpdate","handleCancel","render","width","display","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { EditTodo, AddTodo, UpdateTodo } from '../../../Actions/todo'\n\nclass TodoForm extends React.Component {\n    state = {\n        modelState: {}\n    }\n    // componentDidMount() {\n    //     const { model } = this.props;\n    //     if (model !== null) {\n    //         this.setState({\n    //             modelState: model ? { ...model } : null,\n    //         })\n    //     }\n    // }\n    // componentDidUpdate(preProps) {\n    //     const { model } = this.props;\n    //     if (preProps.model !== model) {\n    //         this.setState({\n    //             modelState: model ? { ...model } : null,\n    //         })\n    //     }\n    // }\n    handleInput = (event) => {\n        const { model } = this.props;\n        // this.setState({\n        //     modelState: {...model, content: event.target.value}\n        // })\n        console.log(event.target.value)\n    }\n    handleAdd = () => {\n        const { AddTodo, model } = this.props\n        model && AddTodo({\n            id: Math.random(),\n            content: model.content,\n        })\n    }\n    handleUpdate = async () => {\n        const { UpdateTodo, model } = this.props;\n        UpdateTodo(model);\n    }\n    handleCancel = () => {\n        this.props.EditTodo(null);\n    }\n    render() {\n        const { modelState } = this.state;\n        const { model } = this.props;\n        return (\n            <Root className=\"gutter-8\">\n                <div style={{ width: \"100%\" }}>\n                    <Input placeholder=\"Task\" type=\"text\" value={modelState ? modelState.content : ''} onChange={this.handleInput} />\n                </div>\n                <div >\n                    {!model ?\n                        <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                        <div style={{ display: \"flex\" }} className='gutter-8'>\n                            <Button type={'update'} onClick={this.handleUpdate}>Update</Button>\n                            <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                        </div>\n                    }\n                </div>\n            </Root>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return bindActionCreators({ AddTodo, EditTodo, UpdateTodo }, dispatch)\n}\nconst mapStateToProps = state => ({\n    model: state.model\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);"]},"metadata":{},"sourceType":"module"}