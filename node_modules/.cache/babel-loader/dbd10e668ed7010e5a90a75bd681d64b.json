{"ast":null,"code":"import _defineProperty from \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Root from './style';\nimport Button from '../UIComponent/Button.js';\nimport Input from '../UIComponent/Input.js';\nimport container from './container';\n\nclass TodoForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modelState: null\n    };\n\n    this.handleInput = event => {\n      const UpdateInput = this.props.UpdateInput;\n      UpdateInput(event.target.value);\n    };\n\n    this.handleAdd = () => {\n      const _this$props = this.props,\n            AddTodo = _this$props.AddTodo,\n            modelInput = _this$props.modelInput;\n      modelInput && AddTodo({\n        id: Math.random(),\n        content: modelInput\n      });\n    };\n\n    this.handleUpdate = async () => {\n      const UpdateTodo = this.props.UpdateTodo;\n      UpdateTodo();\n    };\n\n    this.handleCancel = () => {\n      this.props.EditTodo(null);\n    };\n  }\n\n  componentDidMount() {\n    const model = this.props.model;\n\n    if (model !== null) {\n      this.setState({\n        modelState: model ? _objectSpread({}, model) : null\n      });\n    }\n  }\n\n  componentDidUpdate(preProps) {\n    const model = this.props.model;\n\n    if (preProps.model !== model) {\n      this.setState({\n        modelState: model ? _objectSpread({}, model) : null\n      });\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          model = _this$props2.model,\n          modelInput = _this$props2.modelInput;\n    console.log(modelInput);\n    return React.createElement(Root, {\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Task\",\n      type: \"text\",\n      value: modelInput ? modelInput : '',\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, !model ? React.createElement(Button, {\n      type: 'add',\n      onClick: this.handleAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Add\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      className: \"gutter-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: 'update',\n      onClick: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Update\"), React.createElement(Button, {\n      type: 'cancle',\n      onClick: this.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default container(TodoForm);","map":{"version":3,"sources":["/Users/apple/Projects/src/github.com/Hannah-Lee98/TodoApp/src/Componets/Lesson2/TodoForm/index.js"],"names":["React","Root","Button","Input","container","TodoForm","Component","state","modelState","handleInput","event","UpdateInput","props","target","value","handleAdd","AddTodo","modelInput","id","Math","random","content","handleUpdate","UpdateTodo","handleCancel","EditTodo","componentDidMount","model","setState","componentDidUpdate","preProps","render","console","log","width","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Root from './style'\nimport Button from '../UIComponent/Button.js'\nimport Input from '../UIComponent/Input.js'\nimport container from './container'\n\nclass TodoForm extends React.Component {\n    state = {\n        modelState: null,\n    }\n    componentDidMount() {\n        const { model } = this.props;\n        if (model !== null) {\n            this.setState({\n                modelState: model ? { ...model } : null,\n            })\n        }\n    }\n    componentDidUpdate(preProps) {\n        const { model } = this.props;\n        if (preProps.model !== model) {\n            this.setState({\n                modelState: model ? { ...model } : null,\n            })\n        }\n    }\n    handleInput = (event) => {\n        const { UpdateInput } = this.props;\n        UpdateInput(event.target.value)\n    }\n    handleAdd = () => {\n        const { AddTodo, modelInput } = this.props\n        modelInput && AddTodo({\n            id: Math.random(),\n            content: modelInput\n        })\n    }\n    handleUpdate = async () => {\n        const { UpdateTodo } = this.props;\n        UpdateTodo();\n    }\n    handleCancel = () => {\n        this.props.EditTodo(null);\n    }\n    render() {\n        const { model, modelInput } = this.props;\n        console.log(modelInput)\n        return (\n            <Root className=\"gutter-8\">\n                <div style={{ width: \"100%\" }}>\n                    <Input placeholder=\"Task\" type=\"text\" value={modelInput ? modelInput : ''} onChange={this.handleInput} />\n                </div>\n                <div >\n                    {!model ?\n                        <Button type={'add'} onClick={this.handleAdd}>Add</Button> :\n                        <div style={{ display: \"flex\" }} className='gutter-8'>\n                            <Button type={'update'} onClick={this.handleUpdate}>Update</Button>\n                            <Button type={'cancle'} onClick={this.handleCancel} >Cancel</Button>\n                        </div>\n                    }\n                </div>\n            </Root>\n        )\n    }\n}\n\nexport default container(TodoForm)"]},"metadata":{},"sourceType":"module"}